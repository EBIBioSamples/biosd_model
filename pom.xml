<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>uk.ac.ebi.fg</groupId>
  <artifactId>biosd_model</artifactId>
  <version>2.0.1-SNAPSHOT</version>
  <name>The Biosample Database Object Model</name>

	<properties>
		<p6spy.version>1.3</p6spy.version>
		<hsql.version>2.2.9</hsql.version>
		<h2.version>1.3.168</h2.version>
		<mysql.version>5.1.20</mysql.version>
	</properties>
	
	<dependencies>
	
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.1</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>4.2.0.Final</version>
		</dependency>
		
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>4.3.1.Final</version>
		</dependency>
		
		<dependency>
			<groupId>uk.ac.ebi.fg</groupId>
			<artifactId>core_model</artifactId>
			<version>2.0</version>
		</dependency>
		
		<!-- TEST -->

	  <dependency>
	    <groupId>junit</groupId>
	    <artifactId>junit</artifactId>
	    <version>4.10</version>
	    <scope>test</scope>
	  </dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>0.9.29</version>
	    <scope>test</scope>
		</dependency>

	</dependencies>  
		
  
  <build>
		<plugins>
		
      <plugin>
				<artifactId>maven-compiler-plugin</artifactId>
	      <configuration>
	        <source>1.6</source>
	        <target>1.6</target>
	        <encoding>utf-8</encoding>
	      </configuration>
	    </plugin>
	
	    <plugin>
		    <artifactId>maven-source-plugin</artifactId>
		    <executions>
		      <execution>
		        <id>attach-source</id>
		        <goals>
		          <goal>jar</goal>
		        </goals>
		      </execution>
		    </executions>
	    </plugin>

		  <plugin>
		    <groupId>org.apache.maven.plugins</groupId>
		    <artifactId>maven-surefire-plugin</artifactId>
		    <configuration>
		      <properties>
		        <property>
		        	<!-- Prints out spaces and test name before/after every test method and automatically -->
		          <name>listener</name>
		          <value>uk.ac.ebi.utils.test.junit.TestOutputDecorator</value>
		        </property>
		       </properties>
		    </configuration>
		  </plugin>

      <!-- 
         This generates a .properties file, containing a list of all the JPA classes. This is then used by the 
         resources plug-in, to replace a placeholder in persistence.xml 
         
         See http://github.com/ljnelson/jpa-maven-plugin for details
       -->
			<plugin>
			  <groupId>com.edugility</groupId>
			  <artifactId>jpa-maven-plugin</artifactId>
			  <version>3-SNAPSHOT</version>
			  <configuration>
			  	<outputFile>${project.build.directory}/generated-sources/jpa-maven-plugin/entityClassnames.properties</outputFile>
			  </configuration>
			  <executions>
			    <execution>
			      <id>Generate entityClassnames.properties</id>
              <phase>process-classes</phase>
			      	<goals>
			        <goal>list-entity-classnames</goal>
			      </goals>
			    </execution>
			  </executions>
			</plugin>
		
      <!-- 
         See above.
       -->
			<plugin>
			  <artifactId>maven-resources-plugin</artifactId>
			  <version>2.6</version>
			  <executions>
			    <execution>
			      <id>Copy persistence.xml filtered with generated entityClassnames.properties file</id>
            <phase>process-classes</phase>
			      <goals>
			      	<goal>copy-resources</goal>
			      </goals>
			      <configuration>
			        <filters>
			        	<filter>${project.build.directory}/generated-sources/jpa-maven-plugin/entityClassnames.properties</filter>
			        </filters>
			        <outputDirectory>${project.build.outputDirectory}/META-INF</outputDirectory>
			        <resources>
			          <resource>
			            <filtering>true</filtering>
			            <directory>src/main/resources/META-INF</directory>
			            <includes>
			              <include>persistence.xml</include>
			            </includes>
			          </resource>
			        </resources>
			      </configuration>
			    </execution>
			  </executions>
			</plugin>		
		
    </plugins>
	
    <testResources>
	    <testResource>
	      <directory>src/test/resources</directory>
	      <filtering>true</filtering>
	    </testResource>
    </testResources>

    <resources>
	    <resource>
	      <directory>src/main/resources</directory>
        <excludes>
        	<exclude>META-INF/persistence.xml</exclude>
    		</excludes>	      
	      <filtering>true</filtering>
	    </resource>
    </resources>

    <extensions>
	    <extension>
	      <groupId>org.apache.maven.wagon</groupId>
	      <artifactId>wagon-ssh</artifactId>
	      <version>2.2</version>
	    </extension>
    </extensions>    

	</build>
	
	<scm>
		<developerConnection>scm:git:git@github.com:EBIBioSamples/biosd_model.git</developerConnection>
	</scm>	
	
  <repositories>

		<repository>
			<id>ebi-repo</id>
			<name>EBI repo</name>
			<url>http://www.ebi.ac.uk/~maven/m2repo</url>
		</repository>
		
		<repository>
			<id>ebi-repo-snapshots</id>
			<name>EBI Repo Snapshots</name>
			<url>http://www.ebi.ac.uk/~maven/m2repo_snapshots</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>

    <!-- Used by the JPA plugin -->
    <repository>
        <id>sonatype-public</id>
        <url>https://oss.sonatype.org/content/groups/public/</url>
        <releases>
            <enabled>true</enabled>
        </releases>
        <snapshots>
            <enabled>true</enabled>
        </snapshots>
    </repository>

    <!-- Used by the JPA plugin -->
    <repository>
      <id>eclipselink</id>
      <url>http://download.eclipse.org/rt/eclipselink/maven.repo</url>
      <releases>
          <enabled>true</enabled>
      </releases>
      <snapshots>
          <enabled>true</enabled>
      </snapshots>
    </repository>
      
  </repositories>

  <pluginRepositories>
  
  		<!-- JPA-Plug-in -->
      <pluginRepository>
          <id>sonatype-public</id>
          <url>https://oss.sonatype.org/content/groups/public/</url>
          <releases>
              <enabled>true</enabled>
          </releases>
          <snapshots>
              <enabled>true</enabled>
          </snapshots>
      </pluginRepository>
      
  		<!-- JPA-Plug-in -->
      <pluginRepository>
          <id>eclipselink</id>
          <url>http://download.eclipse.org/rt/eclipselink/maven.repo</url>
          <releases>
              <enabled>true</enabled>
          </releases>
          <snapshots>
              <enabled>true</enabled>
          </snapshots>
      </pluginRepository>
      
  </pluginRepositories>  
	
  <distributionManagement>

	  <repository>
		  <id>ebi-repo-old</id>
		  <name>EBI Repository</name>
		  <url>scp://ebi-001.ebi.ac.uk/homes/maven/public_html/m2repo</url>
	  </repository>
		
	  <snapshotRepository>
		  <id>ebi-repo-old-snapshots</id>
		  <uniqueVersion>false</uniqueVersion>
		  <name>EBI Snapshots Repository</name>
		  <url>scp://ebi-001.ebi.ac.uk/homes/maven/public_html/m2repo_snapshots</url>
	  </snapshotRepository>
	
  </distributionManagement>	
  
  <!--
    Examples of profile-configurable parameters. Probably you'll want to put these in your project, or in settings.xml
    Note that the test.* profiles set up properties like test.*, these are used in test configuration files, (e.g.,
    src/test/resources/hibernate.properties). These is done to allow you to define similar files in your Maven project, 
    but without the test.* prefix. In other word, you can play with profiles and keep separated certain properties 
    depending on a real environment (e.g., production, staging) from test properties like the ones defined here. 
  -->
  <profiles>
  
  	<profile>
  		<id>test.hsql</id>
  		<properties>
				<test.jdbc.username>sa</test.jdbc.username>
				<test.jdbc.password />
				<test.jdbc.url>jdbc:hsqldb:mem:testdb</test.jdbc.url>
				<test.jdbc.driverClassName>org.hsqldb.jdbcDriver</test.jdbc.driverClassName>
				<test.hibernate.dialect>org.hibernate.dialect.HSQLDialect</test.hibernate.dialect>
				<test.hibernate.hbm2ddl.auto>create</test.hibernate.hbm2ddl.auto>
  		</properties>
  		<dependencies>
				<dependency>
	        <groupId>org.hsqldb</groupId>
	        <artifactId>hsqldb</artifactId>
	        <version>${hsql.version}</version>
				</dependency>  		
  		</dependencies>
  	</profile>
  	
  	<profile>
  		<id>test.hsql_file</id>
  		<properties>
				<test.jdbc.username>sa</test.jdbc.username>
				<test.jdbc.password />
				<test.jdbc.url>jdbc:hsqldb:file:target/database/testdb;shutdown=true;hsqldb.write_delay=false</test.jdbc.url>
				<test.jdbc.driverClassName>org.hsqldb.jdbcDriver</test.jdbc.driverClassName>
				<test.hibernate.dialect>org.hibernate.dialect.HSQLDialect</test.hibernate.dialect>
				<test.hibernate.hbm2ddl.auto>update</test.hibernate.hbm2ddl.auto>
  		</properties>
  		<dependencies>
				<dependency>
	        <groupId>org.hsqldb</groupId>
	        <artifactId>hsqldb</artifactId>
	        <version>${hsql.version}</version>
				</dependency>  		
  		</dependencies>
  	</profile> 
  	
  	 
		<profile>
			<id>test.h2</id>
			<activation><activeByDefault>true</activeByDefault></activation>
			<properties>
				<test.jdbc.username>sa</test.jdbc.username>
				<test.jdbc.password />
				<test.jdbc.url>jdbc:h2:mem:testdb</test.jdbc.url>
				<test.jdbc.driverClassName>org.h2.Driver</test.jdbc.driverClassName>
				<test.hibernate.dialect>org.hibernate.dialect.H2Dialect</test.hibernate.dialect>
				<test.hibernate.hbm2ddl.auto>update</test.hibernate.hbm2ddl.auto>
			</properties>
			<dependencies>
				<dependency>
					<groupId>com.h2database</groupId>
					<artifactId>h2</artifactId>
					<version>${h2.version}</version>
				</dependency>
			</dependencies>
		</profile>  	
		
  	<profile>
  		<id>test.h2_file</id>
  		<properties>
				<test.jdbc.username>sa</test.jdbc.username>
				<test.jdbc.password />
				<test.jdbc.url>jdbc:h2:target/database/testdb;FILE_LOCK=no</test.jdbc.url>
				<test.jdbc.driverClassName>org.h2.Driver</test.jdbc.driverClassName>
        <test.hibernate.dialect>org.hibernate.dialect.H2Dialect</test.hibernate.dialect>
				<test.hibernate.hbm2ddl.auto>update</test.hibernate.hbm2ddl.auto>
  		</properties>
  		<dependencies>
				<dependency>
					<groupId>com.h2database</groupId>
					<artifactId>h2</artifactId>
					<version>${h2.version}</version>
				</dependency>
      </dependencies>
  	</profile>    	  	
  	
  	
  	<profile>
  		<id>test.mysql</id>
  		<properties>
				<test.jdbc.username>test</test.jdbc.username>
				<test.jdbc.password>test</test.jdbc.password>
				<test.jdbc.url>jdbc:mysql://localhost/ebi_biosd_test</test.jdbc.url>
				<test.jdbc.driverClassName>com.mysql.jdbc.Driver</test.jdbc.driverClassName>
				<test.hibernate.dialect>org.hibernate.dialect.MySQLDialect</test.hibernate.dialect>
				<test.hibernate.hbm2ddl.auto>update</test.hibernate.hbm2ddl.auto>
  		</properties>
  		<dependencies>
				<dependency>
						<groupId>mysql</groupId>
						<artifactId>mysql-connector-java</artifactId>
						<version>${mysql.version}</version>
				</dependency>  		
  		</dependencies>
  	</profile>

  		
		<!-- 
		  This wraps the same settings in hsql_file with P6SPY, a filter driver that will log all the SQL statements to
		  target/spy.log
		  
		  WARNING: we've a few tests not working with this configuration. It seems the old HSQL driver, mentioned in 
		  spy.properties, is used, instead of the one specified here.
		  
		-->
		<profile>
			<id>test.p6spy.hsql_file</id>
			<properties>
				<test.jdbc.username>sa</test.jdbc.username>
				<test.jdbc.password />
				<test.jdbc.url>jdbc:hsqldb:file:target/database/testdb;shutdown=true;hsqldb.write_delay=false</test.jdbc.url>
				<test.jdbc.driverClassName>com.p6spy.engine.spy.P6SpyDriver</test.jdbc.driverClassName>
				<test.jdbc.spy.driverClassName>org.hsqldb.jdbcDriver</test.jdbc.spy.driverClassName>
				<test.hibernate.dialect>org.hibernate.dialect.HSQLDialect</test.hibernate.dialect>
				<test.hibernate.hbm2ddl.auto>update</test.hibernate.hbm2ddl.auto>
			</properties>
			<dependencies>
				<dependency>
					<groupId>p6spy</groupId>
					<artifactId>p6spy</artifactId>
					<version>${p6spy.version}</version>
				</dependency>			
				<dependency>
					<groupId>org.hsqldb</groupId>
					<artifactId>hsqldb</artifactId>
					<version>${hsql.version}</version>
				</dependency>
			</dependencies>
		</profile>
		
				<!-- 
		  This wraps the same settings in hsql_file with P6SPY, a filter driver that will log all the SQL statements to
		  target/spy.log
		  
		  WARNING: we've a few tests not working with this configuration. It seems the old HSQL driver, mentioned in 
		  spy.properties, is used, instead of the one specified here.
		  
		-->
		<profile>
			<id>test.p6spy.h2_file</id>
			<properties>
				<test.jdbc.username>sa</test.jdbc.username>
				<test.jdbc.password />
				<test.jdbc.url>jdbc:h2:target/database/testdb</test.jdbc.url>
				<test.jdbc.driverClassName>com.p6spy.engine.spy.P6SpyDriver</test.jdbc.driverClassName>
				<test.jdbc.spy.driverClassName>org.h2.Driver</test.jdbc.spy.driverClassName>
        <test.hibernate.dialect>org.hibernate.dialect.H2Dialect</test.hibernate.dialect>
				<test.hibernate.hbm2ddl.auto>update</test.hibernate.hbm2ddl.auto>
			</properties>
			<dependencies>
				<dependency>
					<groupId>p6spy</groupId>
					<artifactId>p6spy</artifactId>
					<version>${p6spy.version}</version>
				</dependency>			
				<dependency>
					<groupId>com.h2database</groupId>
					<artifactId>h2</artifactId>
					<version>${h2.version}</version>
				</dependency>
			</dependencies>
		</profile>
		
		<profile>
			<id>test.oracle_test</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<test.jdbc.username>biosdtst</test.jdbc.username>
				<test.jdbc.password>biosdtst</test.jdbc.password>
				<test.jdbc.url>jdbc:oracle:thin:@bart.ebi.ac.uk:1521:biosdtst</test.jdbc.url>
				<test.jdbc.driverClassName>oracle.jdbc.driver.OracleDriver</test.jdbc.driverClassName>
				<test.hibernate.dialect>org.hibernate.dialect.Oracle10gDialect</test.hibernate.dialect>
				<test.hibernate.hbm2ddl.auto>update</test.hibernate.hbm2ddl.auto>
			</properties>
			<dependencies>
				<dependency>
					<groupId>com.oracle</groupId>
					<artifactId>ojdbc6</artifactId>
					<version>11.2.0.3</version>
				</dependency>
			</dependencies>
		</profile>				

		<!-- 
		  This is for another project, provisionally used here for a few tests.
		-->
  	<profile>
  		<id>test.oracle_myeq_test</id>
  		<activation><activeByDefault>false</activeByDefault></activation>
  		<properties>
				<test.jdbc.username>myeqtst</test.jdbc.username>
				<test.jdbc.password>myeqtst</test.jdbc.password>
				<test.jdbc.url>jdbc:oracle:thin:@bart.ebi.ac.uk:1521:biosdtst</test.jdbc.url>
				<test.jdbc.driverClassName>oracle.jdbc.driver.OracleDriver</test.jdbc.driverClassName>
				<test.hibernate.dialect>org.hibernate.dialect.Oracle10gDialect</test.hibernate.dialect>
				<test.hibernate.hbm2ddl.auto>create</test.hibernate.hbm2ddl.auto>
  		</properties>
  		<dependencies>
				<dependency>
					<groupId>com.oracle</groupId>
					<artifactId>ojdbc6</artifactId>
					<version>11.2.0.3</version>
				</dependency>
  		</dependencies>
  	</profile>
  		
  </profiles>  
</project>